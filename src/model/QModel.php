<?php

/**
 * The base class for Model classes
 */
class QModel implements QIModel
{
	use QModel_GenTrait, QModel_Methods, QModel_Security, QModel_Trait, QModel_Common_View;
	
	protected static $TransactionFlag;
	/**
	 * @var string|array
	 */
	protected static $ListingEntity;
	/**
	 *
	 * @var int
	 */
	protected static $_IncrementedId = 1;
	/**
	 * The language
	 *
	 * @var string
	 */
	public static $Language_Dim = "en";
	/**
	 * The default language
	 *
	 * @var string
	 */
	public static $DefaultLanguage_Dim = "en";
	/**
	 * Dimentions definition
	 *
	 * @var array[]
	 */
	public static $DimsDef = array();
	/**
	 * Current dimentions
	 *
	 * @var array[]
	 */
	public static $Dims = array();
	/**
	 * The types 
	 *
	 * @var QModelType[]|QIModelTypeUnstruct[]
	 */
	protected static $Types = array();
	/**
	 * @todo The current implmentation is not final
	 * @var boolean
	 */
	public static $SecurityApplySQLFilters = true;
	/**
	 * @todo The current implmentation is not final
	 * @var boolean 
	 */
	public static $SecurityCheckQueriedData = false;
	/**
	 * @todo The current implmentation is not final
	 * @var boolean
	 */
	public static $SecurityCheckTransform = false;

	protected static $_Cache_DefaultAppPropertyForTypeValues = [];
	protected static $_Cache_DefaultAppPropertiesForTypeValues = [];
	
	/**
	 * Autogenerated ids
	 *
	 * @var integer
	 */
	public static $NextId = null;
	public static $NextAiId = 1;
	
	public static $_Cache = [];

	public $_wst;

	public $_qini;

	public $_ols;

	public $_id;

	public $_ty;
	
	public $_found_on_merge = false;
	
	public $_ts;
	public $_tsx;
	
	public $_scf;
	public $_is_new;
	public $_sl;
	public $_tid;
	
	public $_lk;
	
	// general purpopse
	// $this->_gp['rel'] - storing relations
	public $_gp;
	public $_typeIdsPath = [];
	public $_tmpid;
	
	/**
	 * @var integer
	 */
	protected $Id;
	
	/**
	 * @storage.index
	 * @storage.notnull
	 * @storage.default 0
	 * 
	 * @var boolean
	 */
	protected $Del__ = 0;

	/**
	 * HIDDEN PROPERTIES
	 * 
	 * A few things any MODEL should have
	 * 
	 * $_ty The type of the model
	 * $_sc The storage container (must be stored with a role)
	 * $_id The id of the object (integer/string)
	 * 
	 * $_ts  This is the transform state of the object : No Action, Create / Update / ... + Custom
	 * 
	 * $_tsx The transform that was actually made
	 * 
	 * # // NO LONGER USED $_tsp The transform state of the properties, key-value array at the moment
	 * 
	 * $_ols The old, changed values
	 * 
	 * $_wst - was set
	 * 
	 * $_lk True if the object is locked
	 * 
	 * $_qini True if init was called on this object, init can not be called more than once
	 * 
	 * $_fn ... attach dynamic(per instance) methods (no longer used)
	 */	
	
	######## QMODEL PATCH #############
	
	
	public static $_counter = 0;

	protected static $ListingSyncEntity;

	protected $_to_rm;

	protected $__rid;

	public static $Dump = false;
	
	public static $__Cache = null;
	
}
